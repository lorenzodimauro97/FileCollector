<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net9.0</TargetFramework>
		<ApplicationIcon>icon.ico</ApplicationIcon>
		<IncludeAllContentForSelfExtract>true</IncludeAllContentForSelfExtract>
		<ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
		<LangVersion>13</LangVersion>
		<Nullable>enable</Nullable>
		<Version>1.0.0</Version>
		<InformationalVersion>1.0.0</InformationalVersion>
		<ApplicationDisplayVersion>1.0.0</ApplicationDisplayVersion>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<Optimize>False</Optimize>
	</PropertyGroup>

	<ItemGroup Condition="$(RuntimeIdentifier.StartsWith('win'))">
		<RdXmlFile Include="rd.xml" />
		<RdXmlFile Include="Microsoft.AspNetCore.Components.Web.rd.xml" />
	</ItemGroup>

	<ItemGroup>
		<Content Update="wwwroot\**">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<Content Include="icon.ico">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		<None Update="favicon.ico">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="BlazorTablerIcons" Version="1.0.0" />
		<PackageReference Include="Microsoft.Extensions.Http" Version="9.0.0-preview.3.24172.9" /> <!-- Or the latest .NET 9 preview version -->
		<PackageReference Include="Photino.Blazor" Version="4.0.13" />
		<PackageReference Include="S97SP.Prism.Blazor" Version="1.0.3" />
		<PackageReference Include="Serilog" Version="4.3.0" />
		<PackageReference Include="Serilog.Extensions.Logging" Version="9.0.1" />
		<PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
		<PackageReference Include="Serilog.Sinks.File" Version="7.0.0" />
		<PackageReference Include="Serilog.Enrichers.Thread" Version="4.0.0" />
	</ItemGroup>

	<!-- Add ProjectReference to FileCollector.Updater -->
	<ItemGroup>
		<ProjectReference Include="..\FileCollector.Updater\FileCollector.Updater.csproj">
			<ReferenceOutputAssembly>false</ReferenceOutputAssembly> <!-- We are not linking to it as a library -->
			<SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties> <!-- Avoids issues for SDK-style projects -->
		</ProjectReference>
	</ItemGroup>

	<!-- Custom target to publish and copy updater files -->
	<Target Name="PublishAndCopyUpdaterFiles" AfterTargets="Build">
		<PropertyGroup>
			<_UpdaterProjectFullPath>$(MSBuildProjectDirectory)\..\FileCollector.Updater\FileCollector.Updater.csproj</_UpdaterProjectFullPath>
			<!-- Define an intermediate directory for the updater's publish output -->
			<_UpdaterIntermediatePublishDir>$(BaseIntermediateOutputPath)updater_publish\$([System.Guid]::NewGuid())</_UpdaterIntermediatePublishDir>
			<!-- $(BaseIntermediateOutputPath) is typically obj/$(Configuration)/$(TargetFramework)/ -->
		</PropertyGroup>

		<Message Text="Publishing FileCollector.Updater to intermediate location: $(_UpdaterIntermediatePublishDir)" Importance="high" />
		<!-- Use MSBuild task to publish the updater project -->
		<MSBuild Projects="$(_UpdaterProjectFullPath)"
				 Targets="Publish"
				 Properties="Configuration=$(Configuration);TargetFramework=$(TargetFramework);PublishDir=$(_UpdaterIntermediatePublishDir);RuntimeIdentifier=$(RuntimeIdentifier);SelfContained=false" />
		<!-- SelfContained=false for updater, assuming .NET 9 runtime is available via main app -->
		<!-- Pass RuntimeIdentifier from main app's build/publish process -->

		<ItemGroup>
			<!-- Collect all files from the updater's intermediate publish directory -->
			<_UpdaterFilesToCopy Include="$(_UpdaterIntermediatePublishDir)\**\*.*" />
		</ItemGroup>

		<Message Text="Copying FileCollector.Updater files to build output: $(OutputPath)" Importance="high" />
		<!-- Copy to main project's build output directory (e.g., bin/Release/net9.0/) -->
		<Copy SourceFiles="@(_UpdaterFilesToCopy)"
			  DestinationFolder="$(OutputPath)\%(RecursiveDir)"
			  SkipUnchangedFiles="true" />

		<!-- Conditionally copy to main project's publish directory (e.g., bin/Release/net9.0/publish/) -->
		<Message Text="Copying FileCollector.Updater files to publish output: $(PublishDir)" Importance="high" Condition=" '$(PublishDir)' != '' And '$(PublishDir)' != '$(OutputPath)' " />
		<Copy SourceFiles="@(_UpdaterFilesToCopy)"
			  DestinationFolder="$(PublishDir)\%(RecursiveDir)"
			  SkipUnchangedFiles="true"
			  Condition=" '$(PublishDir)' != '' And '$(PublishDir)' != '$(OutputPath)' " />
		<!-- The condition '$(PublishDir)' != '$(OutputPath)' avoids redundant copy if paths are the same -->

		<!-- Clean up the intermediate updater publish directory -->
		<RemoveDir Directories="$(_UpdaterIntermediatePublishDir)" Condition="Exists('$(_UpdaterIntermediatePublishDir)')" />
	</Target>

</Project>