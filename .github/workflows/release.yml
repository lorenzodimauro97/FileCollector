name: Build and Release FileCollector

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build for ${{ matrix.os-name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            os-name: Windows
            rid: win-x64
            artifact-name-suffix: win-x64
            output-archive-name: FileCollector-win-x64.zip
          - os: macos-latest
            os-name: macOS
            rid: osx-x64
            artifact-name-suffix: osx-x64
            output-archive-name: FileCollector-osx-x64.tar.gz
          - os: ubuntu-latest
            os-name: Linux
            rid: linux-x64
            artifact-name-suffix: linux-x64
            output-archive-name: FileCollector-linux-x64.tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore FileCollector/FileCollector.csproj

      - name: Publish application
        run: dotnet publish FileCollector/FileCollector.csproj -c Release -r ${{ matrix.rid }} --self-contained true /p:PublishSingleFile=false /p:DebugType=None /p:PublishTrimmed=false /p:PublishReadyToRun=false -o ./publish_output # <--- MODIFIED HERE

      - name: List publish_output contents (Diagnostics)
        if: runner.os == 'Windows'
        run: Get-ChildItem -Path ./publish_output -Recurse | Select-Object FullName, Length, Mode, LastWriteTime
        shell: pwsh
      
      - name: List publish_output contents (Diagnostics)
        if: runner.os != 'Windows'
        run: ls -lR ./publish_output
        shell: bash

      - name: Archive output (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path ./publish_output/* -DestinationPath ./${{ matrix.output-archive-name }}
        shell: pwsh

      - name: Archive output (macOS/Linux)
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        run: tar -czvf ./${{ matrix.output-archive-name }} -C ./publish_output .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: FileCollector-${{ matrix.artifact-name-suffix }}
          path: ./${{ matrix.output-archive-name }}