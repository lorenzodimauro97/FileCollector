# File: .github/workflows/release.yml
# ... (on, permissions, build job remain the same) ...

jobs:
  build:
    # ... (build job definition remains the same) ...

  create_release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # All artifacts will be downloaded to the 'artifacts' directory

      - name: Delete existing release to avoid conflict
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically available, gh uses it
          TAG: ${{ github.ref_name }} # e.g., v1.0.0
        run: |
          echo "Checking for release with tag ${{ env.TAG }}..."
          # Attempt to view the release. If it exists, gh release view returns 0. If not, it returns non-zero.
          if gh release view "${{ env.TAG }}" > /dev/null 2>&1; then
            echo "Release for tag ${{ env.TAG }} found. Deleting it..."
            gh release delete "${{ env.TAG }}" --yes
            echo "Existing release for tag ${{ env.TAG }} deleted."
          else
            echo "No existing release found for tag ${{ env.TAG }}. Proceeding to create."
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }} # Action handles stripping 'refs/tags/' internally
          release_name: Release ${{ github.ref_name }}
          body: |
            Release of FileCollector version ${{ github.ref_name }}.
            Download the appropriate package for your operating system below.
          draft: false
          prerelease: false # Set to true if this is a pre-release

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/FileCollector-win-x64/FileCollector-${{ github.ref_name }}-win-x64.zip
          asset_name: FileCollector-${{ github.ref_name }}-win-x64.zip
          asset_content_type: application/zip

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/FileCollector-linux-x64/FileCollector-${{ github.ref_name }}-linux-x64.zip
          asset_name: FileCollector-${{ github.ref_name }}-linux-x64.zip
          asset_content_type: application/zip

      - name: Upload macOS (x64) Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/FileCollector-osx-x64/FileCollector-${{ github.ref_name }}-osx-x64.zip
          asset_name: FileCollector-${{ github.ref_name }}-osx-x64.zip
          asset_content_type: application/zip

      # Optional: Upload macOS (ARM64) Release Asset
      # ...